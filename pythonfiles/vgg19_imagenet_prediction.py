# -*- coding: utf-8 -*-
"""VGG19_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mMS4DoHb6m1G29k_ns5kZ6v2kJu0D9RN
"""

#lineone:VGG19 model is used to classify a image (given:url of a image)-(keras)
#http://image-net.org/about-stats
#https://arxiv.org/abs/1409.1556
#below code has been tested and executed only in colab.research.google.com .Please make sure you have enabled GPU from notebook settings before execution

#make sure you are importing preprocess_input and decode_predictions from vgg19 model
from keras.applications.vgg19 import VGG19
from keras.preprocessing import image
from keras.applications.vgg19 import preprocess_input,decode_predictions
import numpy as np

#For visualising picture
from matplotlib import pyplot as plt
# %matplotlib inline

base_model=VGG19(weights='imagenet',include_top=True)

#image is loaded from url
#you can use imread to load loacally 
from urllib.request import urlopen

#url of the image is stored in url_link1
urllink=urlopen("https://razzonline.com/wp-content/uploads/2017/07/an-elephant-.jpg")

#(224,224) is the target size of resnet50 model
img=image.load_img(urllink,target_size=(224,224))

#visuvalising input image
plt.imshow(img)

#preprocessing input image
x=image.img_to_array(img)
x=np.expand_dims(x,axis=0)
x=preprocess_input(x)

#input is provided to model to predict the class
predictions=base_model.predict(x)

predictions.shape

#decode_predictions decodes the values of predict and provides the output
print("predict:",decode_predictions(predictions,top=2))

#predictions listed given image is an african elephant with highest probability and then tusker at next probability 
#you can also increase the number of predictions by increasing the values of top to 4,5,6.. in "print("predict:",decode_predictions(predictions,top=4))""