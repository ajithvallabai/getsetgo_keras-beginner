# -*- coding: utf-8 -*-
"""Vgg16testfinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IsrfU8CoMXHCVltMry55O0huzbm3qbe1
"""

#lineone:VGG16 model is used to classify a image (given: url of a image)-(keras)
#http://image-net.org/about-stats
#https://arxiv.org/pdf/1409.1556.pdf
#below code has been tested and executed only in colab.research.google.com .For faster execution please make sure you have enabled GPU from notebook settings before execution

#you are importing preprocess_input and decode_predictions from vgg16 model
#remember each model has its own preprocess_input and decoding functions when you are replication this for other 
#models make sure you importing form respective model
from keras.applications.vgg16 import VGG16
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input, decode_predictions
import numpy as np

#for visuvalizing picture
from matplotlib import pyplot as plt
# %matplotlib inline

model=VGG16(weights='imagenet',include_top=True)
#if you change include_top=False predict wont work

#image is loaded from url
#you can use imread to load loacally 
from urllib.request import urlopen

#url of the image is stored in url_link
urllink=urlopen("https://razzonline.com/wp-content/uploads/2017/07/an-elephant-.jpg")

#(224,224) is the target size of VGG16 model
img=image.load_img(urllink,target_size=(224,224))

#preprocessing input image
x=image.img_to_array(img)
x=np.expand_dims(x,axis=0)
x=preprocess_input(x)

#input is provided to model to predict the class
prediction=model.predict(x)

#prediction should be in shape(1,1000) in order to be decoded
prediction.shape

#decode_predictions decodes the values of pred1 and provides the output
print("predict :",decode_predictions(prediction,top=3)[0])

#This is the VGG model which we used - a text based description
model.summary()